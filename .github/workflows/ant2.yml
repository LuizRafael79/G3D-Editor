name: G3D-Editor (Windows)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: '25'
        distribution: 'temurin'

    - name: Install Apache Ant
      run: choco install ant -y

    - name: Build with Ant
      run: ant -f build_win_x64.xml dist-zip

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: G3DEditor-windows
        path: build/win_x64/G3DEditor_win_x64_*.zip

    - name: Install GitHub CLI
      run: choco install gh -y

    - name: Determine next tag
      id: tag
      shell: pwsh
      run: |
        $prefix = "windows"
        git fetch --tags
        $existing = git tag --list "$prefix-1.*"
        if (-not $existing) {
            $next_tag = "$prefix-1.6"
        } else {
            $max_minor = 0
            foreach ($t in $existing) {
                $minor = [int]($t.Split("-")[1].Split(".")[1])
                if ($minor -gt $max_minor) { $max_minor = $minor }
            }
            $next_minor = $max_minor + 1
            $next_tag = "$prefix-1.$next_minor"
        }
        Write-Output "Next tag: $next_tag"
        echo "TAG_NAME=$next_tag" | Out-File -Encoding UTF8 -Append $env:GITHUB_ENV

        # gerar título amigável do release
        $release_title = "G3DEditor Windows v$($next_tag.Split('-')[1])"
        echo "RELEASE_TITLE=$release_title" | Out-File -Encoding UTF8 -Append $env:GITHUB_ENV

    - name: Create or update GitHub Release
      shell: pwsh
      run: |
        if (gh release view $env:TAG_NAME > $null 2>&1) {
            Write-Host "Release exists, updating assets..."
            gh release upload $env:TAG_NAME build/win_x64/G3DEditor_win_x64_*.zip --clobber
        } else {
            Write-Host "Release does not exist, creating..."
            gh release create $env:TAG_NAME build/win_x64/G3DEditor_win_x64_*.zip `
                --title "$env:RELEASE_TITLE" `
                --notes "Build gerado automaticamente"
        }
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_BUILD }}
